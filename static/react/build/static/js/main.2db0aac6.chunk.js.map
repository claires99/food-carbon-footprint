{"version":3,"sources":["pages/Vehicle.js","pages/Home.js","pages/Shipping.js","pages/Electricity.js","pages/Food.js","App.js","reportWebVitals.js","index.js"],"names":["Vehicle","props","state","distance_unit","distance_value","type","vehicle_model_id","answer","carbon_lb","carbon_kg","handleUnit","bind","handleDistance","handleSubmit","handleClick","event","this","setState","target","value","preventDefault","alert","fetch","method","headers","Authorization","body","JSON","stringify","then","response","ok","json","Error","networkError","console","log","message","res","data","attributes","className","onClick","onSubmit","for","onChange","Component","Home","href","Shipping","weight_value","weight_unit","transport_method","carbon_g","handleWeightUnit","handleWeight","Electricity","electricity_unit","electricity_value","country","handleElectricity","DisplayResults","carbons","equiv","length","map","item","Food","useState","img","setImg","foods","setFoods","setCarbons","mi","gas","coal","phone","trees","setEquiv","id","style","name","placeholder","e","userInput","document","getElementById","parsedResponse","src","App","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2db0aac6.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Vehicle extends Component {\n    constructor (props){\n        super (props);\n        this.state = {\n            distance_unit: 'mi',\n            distance_value: 0,\n            type: 'vehicle',\n            vehicle_model_id: '7268a9b7-17e8-4c8d-acca-57059252afe9',\n            answer: false,\n            carbon_lb: 0,\n            carbon_kg: 0\n        };\n        this.handleUnit = this.handleUnit.bind(this);\n        this.handleDistance = this.handleDistance.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleUnit (event){\n        this.setState({distance_unit: event.target.value});\n    }\n\n    handleDistance (event){\n        this.setState({distance_value: event.target.value});\n    }\n\n    handleSubmit (event){\n        event.preventDefault();\n        if (this.state.distance_value <= 0){\n            alert(\"Distance has to be greater than 0\");\n            return;\n        }\n        \n        fetch('https://www.carboninterface.com/api/v1/estimates', {\n            method: 'POST',\n            headers: {\n                Authorization: \"Bearer rsAEeLI7NL3fl9z7RvlNzg\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                type: this.state.type,\n                distance_unit: this.state.distance_unit,\n                distance_value: this.state.distance_value,\n                vehicle_model_id: this.state.vehicle_model_id\n            })\n        }).then(response => {\n            if (response.ok)\n                return response.json();\n            throw new Error (\"Request failed\");\n        }, networkError => {\n            console.log(networkError.message); }\n        ).then(res => {\n            console.log(res);\n            this.setState({carbon_kg: res.data.attributes.carbon_kg, \n                carbon_lb: res.data.attributes.carbon_lb,\n                answer: true\n            });\n        });\n    }\n\n    handleClick(){\n        this.setState({answer: false});\n    }\n    \n    render (){\n        if (!this.state.answer){\n            return (\n                <div className=\"container-md my-5 pt-3\">\n                    <h2 className=\"py-5\">Carbon Emission by Driving Vehicle</h2>\n                    <form className=\"px-md-5\" onSubmit = {this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <label for=\"exampleFormControlInput1\">Distance Unit: </label>\n                                <select className=\"form-control\" for=\"exampleSelect1\" value = {this.state.distance_unit} onChange = {this.handleUnit}>\n                                    <option value = 'mi'>mi</option>\n                                    <option value = 'km'>km</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label for=\"exampleFormControlInput1\">The traveling distance by vehicle: </label>\n                                <input type=\"number\" className=\"form-control\" value = {this.state.distance_value} onChange = {this.handleDistance}></input>\n                            </div>\n\n                            <div className=\"form-group\"><input className=\"btn btn-primary pt-1\" type=\"submit\" value=\"search\"></input></div>\n                    </form>\n                </div>\n            )\n        }\n        else{\n            return (\n                <div className=\"container-md my-5 pt-5 pt-md-0\">\n                    <h2 className=\"py-5\">Carbon Emission by Driving Vehicle</h2>\n                    <p>Total Carbon Emission (kg): {this.state.carbon_kg}</p>\n                    <p>Total Carbon Emission (lb): {this.state.carbon_lb}</p>\n                    <button className=\"btn btn-warning pt-1\" onClick = {this.handleClick}>Return</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Vehicle;","import React, {Component} from 'react';\n\nclass Home extends Component{\n    render(){\n        return (\n            <div className=\"container-md my-5 pt-5\">\n                <p>Some Text blablabla</p>\n                <a href=\"../\">Link</a>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\n\nclass Shipping extends Component {\n    constructor (props){\n        super (props);\n        this.state = {\n            distance_unit: 'mi',\n            distance_value: 0,\n            type: 'shipping',\n            answer: false,\n            weight_value: 0,\n            weight_unit: 'kg',\n            transport_method: 'truck',\n            carbon_lb: 0,\n            carbon_g: 0\n        };\n        this.handleUnit = this.handleUnit.bind(this);\n        this.handleDistance = this.handleDistance.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleWeightUnit = this.handleWeightUnit.bind(this);\n        this.handleWeight = this.handleWeight.bind(this);\n    }\n\n    handleUnit (event){\n        this.setState({distance_unit: event.target.value});\n    }\n\n    handleDistance (event){\n        this.setState({distance_value: event.target.value});\n    }\n\n    handleSubmit (event){\n        event.preventDefault();\n        if (this.state.distance_value <= 0 || this.state.weight_value <= 0){\n            alert(\"Distance or Weight has to be greater than 0\");\n            return;\n        }\n        \n        fetch('https://www.carboninterface.com/api/v1/estimates', {\n            method: 'POST',\n            headers: {\n                Authorization: \"Bearer rsAEeLI7NL3fl9z7RvlNzg\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                type: this.state.type,\n                weight_unit: this.state.weight_unit,\n                weight_value: this.state.weight_value,\n                distance_unit: this.state.distance_unit,\n                distance_value: this.state.distance_value,\n                transport_method: this.state.transport_method\n            })\n        }).then(response => {\n            if (response.ok)\n                return response.json();\n            throw new Error (\"Request failed\");\n        }, networkError => {\n            console.log(networkError.message); }\n        ).then(res => {\n            console.log(res);\n            this.setState({carbon_g: res.data.attributes.carbon_g, \n                carbon_lb: res.data.attributes.carbon_lb,\n                answer: true\n            });\n        });\n    }\n\n    handleWeightUnit(event){\n        this.setState({weight_unit: event.target.value });\n    }\n\n    handleWeight(event){\n        this.setState({weight_value: event.target.value});\n    }\n\n    handleClick(){\n        this.setState({answer: false});\n    }\n    \n    render (){\n        if (!this.state.answer){\n            return (\n                <div className=\"container-md my-5 pt-3\">\n                    <h2 className=\"py-5\">Carbon Emission of Shipping</h2>\n                    <form className=\"px-md-5\" onSubmit = {this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <label for=\"exampleFormControlInput1\">Weight Unit: </label>\n                                <select className=\"form-control\" for=\"exampleSelect1\" value = {this.state.weight_unit} onChange = {this.handleWeightUnit}>\n                                    <option value = 'kg'>kg</option>\n                                    <option value = 'lb'>lb</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label for=\"exampleFormControlInput1\">Weight Value of a Package: </label>\n                                <input className=\"form-control\" type=\"number\" value = {this.state.weight_value} onChange = {this.handleWeight}></input>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label for=\"exampleFormControlInput1\">Distance Unit: </label>\n                                <select className=\"form-control\" for=\"exampleSelect1\" value = {this.state.distance_unit} onChange = {this.handleUnit}>\n                                    <option value = 'mi'>mi</option>\n                                    <option value = 'km'>km</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label for=\"exampleFormControlInput1\">The traveling distance of the package: </label>\n                                <input className=\"form-control\" type=\"number\" value = {this.state.distance_value} onChange = {this.handleDistance}></input>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input className=\"btn btn-primary pt-1\" type=\"submit\" value=\"search\"></input>\n                            </div>\n                    </form>\n                </div>\n            )\n        }\n        else{\n            return (\n                <div className=\"container-md my-5 pt-3\">\n                    <h2 className=\"py-5\">Carbon Emission of Shipping</h2>\n                    <p>Total Carbon Emission (g): {this.state.carbon_g}</p>\n                    <p>Total Carbon Emission (lb): {this.state.carbon_lb}</p>\n                    <button className=\"btn btn-warning pt-1\" onClick = {this.handleClick}>Return</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Shipping;","import React, {Component} from 'react';\n\nclass Electricity extends Component {\n    constructor (props){\n        super (props);\n        this.state = {\n            type: 'electricity',\n            electricity_unit: 'kwh',\n            electricity_value: 0,\n            country: 'us',\n            answer: false,\n            carbon_lb: 0,\n            carbon_kg: 0\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleElectricity = this.handleElectricity.bind(this);\n    }\n\n    handleElectricity (event){\n        this.setState({electricity_value: event.target.value});\n    }\n\n    handleSubmit (event){\n        event.preventDefault();\n        if (this.state.electricity_value <= 0){\n            alert(\"Electricity Consumption has to be greater than 0\");\n            return;\n        }\n        \n        fetch('https://www.carboninterface.com/api/v1/estimates', {\n            method: 'POST',\n            headers: {\n                Authorization: \"Bearer rsAEeLI7NL3fl9z7RvlNzg\",\n                \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                type: this.state.type,\n                electricity_unit: this.state.electricity_unit,\n                electricity_value: this.state.electricity_value,\n                country: this.state.country\n            })\n        }).then(response => {\n            if (response.ok)\n                return response.json();\n            throw new Error (\"Request failed\");\n        }, networkError => {\n            console.log(networkError.message); }\n        ).then(res => {\n            console.log(res);\n            this.setState({carbon_kg: res.data.attributes.carbon_kg, \n                carbon_lb: res.data.attributes.carbon_lb,\n                answer: true\n            });\n        });\n    }\n\n    handleClick(){\n        this.setState({answer: false});\n    }\n    \n    render (){\n        if (!this.state.answer){\n            return (\n                <div className=\"container-md my-5 pt-3\">\n                    <h2 className=\"py-5\">Carbon Emission of Electricity Consumption</h2>\n                    <form className=\"px-md-5\" onSubmit = {this.handleSubmit}>\n                        <div className=\"form-group\">\n                            <label for=\"exampleFormControlInput1\">Electricity Consumption(kwh): </label>\n                            <input className=\"form-control\" type=\"number\" value = {this.state.electricity_value} onChange = {this.handleElectricity}></input>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input className=\"btn btn-primary pt-1\" type=\"submit\" value=\"search\"></input>\n                        </div>\n                    </form>\n                </div>\n            )\n        }\n        else{\n            return (\n                <div className=\"container-md my-5 pt-3\">\n                    <h2 className=\"py-5\">Carbon Emission of Electricity Consumption</h2>\n                    <p>Total Carbon Emission (kg): {this.state.carbon_kg}</p>\n                    <p>Total Carbon Emission (lb): {this.state.carbon_lb}</p>\n                    <button className=\"btn btn-warning pt-1\" onClick = {this.handleClick}>Return</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Electricity;","import {useState} from 'react';\nimport './Food.css';\n\nconst Food = () => {\n    const [img, setImg] = useState(null);\n    const [foods, setFoods] = useState([]);\n    const [carbons, setCarbons] = useState([]);\n    const [equiv, setEquiv] = useState({\n        mi: '',\n        gas: '',\n        coal: '',\n        phone: '',\n        trees: '',\n    });\n\n    const submitForm = (e) => {\n        e.preventDefault();\n        let userInput = document.getElementById('image-upload').value;\n        fetch('http://localhost:5000/ingredients?query_url=' + userInput\n        ).then(response => response.json()\n        ).then(parsedResponse => {\n            setImg(parsedResponse.img);\n            setFoods(parsedResponse.foods);\n            setCarbons(parsedResponse.carbons);\n            setEquiv(parsedResponse.equiv);\n        });\n    }\n\n    return (\n        <div id=\"container\" style={{\"padding-top\": '100px'}}>\n            <form>\n                <input type=\"text\" name=\"query_url\" placeholder=\"Paste in a URL of an image\" id=\"image-upload\" />\n                <input type=\"submit\" value=\"Submit\" className=\"sub\" onClick={submitForm}/>\n            </form>\n            {\n                img && (\n                    <div id=\"pic\">\n                        <h2>Your submission: </h2>\n                        <img id=\"query-img\" src={img} />\n                    </div>\n                )\n            }\n            <div id=\"ingredients\">\n                {\n                    foods && (\n                        <div>\n                            <h2>Food Matches</h2>\n                            <ul>\n                                {foods.map(item => (\n                                    <li key={item}>{item}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    )\n                }\n                <br />\n                <DisplayResults carbons={carbons} equiv={equiv} />\n            </div>\n        </div>\n    );\n}\n\nconst DisplayResults = ({carbons, equiv}) => {\n    if(!carbons) {\n        return <div></div>\n    }\n    if(carbons.length === 0){\n        return (\n            <>\n                <h3>Match Failure</h3>\n                <p>Unfortunately, we weren't able to match your picture with an item in our food to carbon database.</p>\n                <p>Please try another image.</p>\n            </>\n        );\n    }\n    return (\n        <>\n            <h2>Greenhouse Gas Emissions</h2>\n            <h4>In Lbs of CO<sub>2</sub> per Kilogram of Food Product</h4>\n            <ul>\n                {carbons.map(item => (\n                    <li key={item[0]}>{ item[0] }: {item[1]}</li>\n                ))}\n            </ul>\n            <br />\n            <h3>That could mean the equivalent of...</h3>\n            <ul>\n                <li>Greenhouse gas emissions from <b>{equiv[\"mi\"]}</b> miles driven by an average passenger vehicle</li>\n                <li>CO<sub>2</sub> emissions from <b>{equiv[\"gas\"]}</b> gallons of gasoline consumed</li>\n                <li>CO<sub>2</sub> emissions from <b>{equiv[\"coal\"]}</b> pounds of coal burned</li>\n                <li>CO<sub>2</sub> emissions from <b>{equiv[\"phone\"]}</b> phones charged</li>\n                <li>Carbon sequested by <b>{equiv[\"trees\"]}</b> tree saplings grown for 10 years</li>\n            </ul>\n        </>\n    );\n}\n\nexport default Food;","import React,{Component} from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n  } from \"react-router-dom\";\nimport Vehicle from './pages/Vehicle';\nimport Home from './pages/Home';\nimport Shipping from './pages/Shipping';\nimport Electricity from './pages/Electricity';\nimport Food from './pages/Food';\n\nclass App extends Component {\n\n  //only for navigation\n  render(){\n    return (\n      <div>\n\n        <Router>\n          <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-primary\">\n            <span><Link className=\"navbar-brand h2\" to='/'>Sustainable Lifestyle</Link></span>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item dropdown\">\n                  <a className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Carbon Emission</a>\n                  <div className=\"dropdown-menu\">\n                      <Link className=\"dropdown-item\" to='/vehicle'>Carbon Emission by Driving Vehicle</Link>\n                      <Link className=\"dropdown-item\" to = '/shipping'>Carbon Emission of Shipping Packages</Link>\n                      <Link className=\"dropdown-item\" to = '/electricity'>Carbon Emission of Electricity Consumption</Link>\n                      <Link className=\"dropdown-item\" to = '/food'>Food</Link>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </nav>\n\n          <Switch>\n            <Route exact path='/vehicle'>\n              <Vehicle />\n            </Route>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n            <Route exact path = '/shipping'>\n              <Shipping />\n            </Route>\n            <Route exact path = '/electricity'>\n              <Electricity />\n            </Route>\n            <Route exact path = '/food'>\n              <Food />\n            </Route>\n\n          </Switch>\n        </Router>\n\n      </div>\n  )};\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}